{"version":3,"sources":["firebase.js","components/Spinner.js","pages/Signup.js","pages/Login.js","components/chats/ChatCard.js","pages/ChatRoom.js","pages/ChatRoomCreate.js","pages/Test.js","pages/ChatRoomWithImmer.js","Routes.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","Spinner","show","className","Signup","history","useHistory","useState","email","setEmail","password","setPassword","nickName","setNickName","loading","setLoading","setUid","setLoginStatus","useEffect","auth","onAuthStateChanged","user","uid","currentUser","push","onChange","evt","target","value","placeholder","type","Button","variant","color","onClick","length","alert","createUserWithEmailAndPassword","then","collection","add","created","Timestamp","now","seconds","ref","catch","error","code","console","log","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","btn","Login","classes","initLoaded","setInitLoaded","loginStatus","signOut","Container","component","maxWidth","CssBaseline","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","signInWithEmailAndPassword","errorCode","window","location","reload","Grid","container","item","xs","Link","href","Box","mt","ChatCard","React","memo","chat","users","index","onEmojiClick","fontSize","style","borderRadius","marginLeft","who","content","prevProps","nextProps","Chats","chats","map","ChatRoom","props","setChats","chatContent","setChatContent","setUsers","channelId","useParams","messagesEndRef","useRef","modifyCandidate","setModifyCandidate","text","search","useMemo","current","scrollIntoView","behavior","scrollToBottom","doc","orderBy","get","snapshot","data","docs","onSnapshot","docChanges","forEach","change","newEntry","chatRecords","copied","findIndex","uids","filter","self","indexOf","usersRef","arr","where","querySnapshot","position","height","overflowY","paddingBottom","float","clear","bottom","onTextareaChange","listDiv","background","maxHeight","overflow","input","marginRight","padding","paperTop","ChatRoomCreate","channel","setChannel","roomData","setRoomData","addedList","concat","direction","sm","md","Paper","elevation","Typography","Object","values","set","creatNewChatRoom","List","room","ListItem","button","roomName","ListItemText","primary","Test","cnt","setCnt","prev","ChatRoomWithImmer","useImmer","draft","el","emojiKey","chatId","chatRef","emojiObj","emoji","includes","update","Routes","exact","path","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAEMA,EAAcC,IAASC,cAAc,CACzCC,OAAQC,0CACRC,WAAYD,mCACZE,UAAWF,mBACXG,cAAeH,+BACfI,kBAAmBJ,eACnBK,MAAOL,8CAGHM,EAAKV,EAAYW,Y,OCFRC,EAPC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAChB,OAAO,qBAAKC,UAAS,oCAA+BD,EAAO,OAAO,SAA3D,SACL,qBAAKC,UAAU,sB,SCsHJC,EAnHA,WACb,IAAMC,EAAUC,cADG,EAEOC,mBAAS,IAFhB,mBAEZC,EAFY,KAELC,EAFK,OAGaF,mBAAS,IAHtB,mBAGZG,EAHY,KAGFC,EAHE,OAIaJ,mBAAS,IAJtB,mBAIZK,EAJY,KAIFC,EAJE,OAKWN,oBAAS,GALpB,mBAKZO,EALY,KAKHC,EALG,OAMGR,mBAAS,IANZ,mBAMPS,GANO,aAOmBT,oBAAS,GAP5B,mBAOCU,GAPD,WAqEnB,OAXAC,qBAAU,WACR7B,EAAY8B,OAAOC,oBAAmB,SAACC,GACrC,IAAMC,GAAOjC,EAAY8B,OAAOI,aAAe,IAAID,IAChDA,IACDL,GAAe,GACfD,EAAOM,GACPjB,EAAQmB,KAAK,cAGhB,IAGD,gCACE,cAAC,EAAD,CAAStB,KAAMY,IACf,qBAAKX,UAAU,qBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,OAAf,SACE,8CAEF,uBAAOsB,SAAU,SAAAC,GAAQb,EAAYa,EAAIC,OAAOC,QAC9CzB,UAAU,mBACV0B,YAAY,WACZD,MAAOhB,OAIX,sBAAKT,UAAU,eAAf,UACE,qBAAKA,UAAU,OAAf,SACE,2CAEF,uBAAOsB,SAAU,SAAAC,GAAQjB,EAASiB,EAAIC,OAAOC,QAC3CzB,UAAU,mBACV0B,YAAY,QACZD,MAAOpB,OAGX,sBAAKL,UAAU,eAAf,UACE,qBAAKA,UAAU,OAAf,SACE,8CAEF,uBAAOsB,SAAU,SAAAC,GAAQf,EAAYe,EAAIC,OAAOC,QAC9CzB,UAAU,mBACV0B,YAAY,WACZC,KAAK,WACLF,MAAOlB,OAGX,qBAAKP,UAAU,uBAEf,cAAC4B,EAAA,EAAD,CAAQD,KAAK,SAASE,QAAQ,WAAWC,MAAM,UAAUC,QAnGlD,WACV1B,EAAM2B,OAAS,EAChBC,MAAM,sFAMRrB,GAAW,GACX1B,EAAY8B,OAAOkB,+BAA+B7B,EAAOE,GACxD4B,MAAK,SAACjB,GACL,IAAMC,GAAOjC,EAAY8B,OAAOI,aAAe,IAAID,IAChDA,EACDvB,EACCwC,WAAW,QACXC,IAAI,CACHlB,IAAKA,EACLV,SAAUA,EACVJ,MAAOA,EACPiC,QAASnD,IAASU,UAAU0C,UAAUC,MAAMC,UAE7CN,MAAK,SAACO,GACL5B,GAAe,GACfD,EAAOM,GAEPb,EAAS,IACTE,EAAY,IAEZyB,MAAMxB,EAAW,0CACjBP,EAAQmB,KAAK,eAEbT,GAAW,MAGbqB,MAAM,YAGTU,OAAM,SAACC,GACNhC,GAAW,GAEM,8BADDgC,EAAMC,MAEpBZ,MAAM,4HACN/B,EAAQmB,KAAK,WAEbyB,QAAQC,IAAIH,QAuDV,gC,iFC3GJI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,IAAK,CACHP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,GAC5BvB,MAAO,eA8LIoC,EAtKD,WACZ,IAAMC,EAAUnB,IAEV9C,EAAUC,cAHE,EAIQC,mBAAS,IAJjB,mBAIXC,EAJW,KAIJC,EAJI,OAKcF,mBAAS,IALvB,mBAKXG,EALW,KAKDC,EALC,OAMkBJ,oBAAS,GAN3B,mBAMXgE,EANW,KAMCC,EAND,OAOYjE,oBAAS,GAPrB,mBAOXO,EAPW,KAOFC,EAPE,OAQoBR,oBAAS,GAR7B,mBAQXkE,EARW,KAQExD,EARF,KA0DlBC,qBAAU,WACR7B,EAAY8B,OAAOC,oBAAmB,SAACC,GACrCmD,GAAc,IAEDnF,EAAY8B,OAAOI,aAAe,IAAID,MAEjDL,GAAe,GACfZ,EAAQmB,KAAK,qBAKhB,IAMH,OAAK+C,EAKH,gCACE,cAAC,EAAD,CAASrE,KAAMY,IACd2D,EACC,mCACE,qBAAKtE,UAAU,iBAAiB+B,QAAS,SAACR,GA/BhDrC,EAAY8B,OAAOuD,UACnBzD,GAAe,IA8BT,wBAGF,mCACE,eAAC0D,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,qBAAK3E,UAAWmE,EAAQhB,MAAxB,SACE,uBAAMnD,UAAWmE,EAAQJ,KAAMa,YAAU,EAAzC,UACE,cAACC,EAAA,EAAD,CACEhD,QAAQ,WACR6B,OAAO,SACPoB,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACT3D,MAAOpB,EACPiB,SAAU,SAAAC,GAAQjB,EAASiB,EAAIC,OAAOC,UAExC,cAACoD,EAAA,EAAD,CACEhD,QAAQ,WACR6B,OAAO,SACPoB,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNtD,KAAK,WACLqD,GAAG,WACHG,aAAa,mBACb1D,MAAOlB,EACPe,SAAU,SAAAC,GAAQf,EAAYe,EAAIC,OAAOC,UAE3C,cAAC4D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAU9D,MAAM,WAAWK,MAAM,YAC1CmD,MAAM,gBAER,cAACrD,EAAA,EAAD,CACED,KAAK,SACLoD,WAAS,EACTlD,QAAQ,YACRC,MAAM,UACN9B,UAAWmE,EAAQF,IACnBlC,QAAS,SAAAR,GAtHnBlB,EAAM2B,OAAS,EACjBC,MAAM,4BAKRrB,GAAW,GAEX1B,EACG8B,OAAOwE,2BAA2BnF,EAAOE,GACzC4B,MAAK,SAACjB,IACQhC,EAAY8B,OAAOI,aAAe,IAAID,KAEjDL,GAAe,GACfR,EAAS,IACTE,EAAY,IACZN,EAAQmB,KAAK,eACbT,GAAW,KAEXqB,MAAM,SACNrB,GAAW,OAGd+B,OAAM,SAACC,GACNhC,GAAW,GAEX,IAAI6E,EAAY7C,EAAMC,KACJ,wBAAd4C,EACFxD,MAAM,mCACe,uBAAdwD,EACPxD,MAAM,mEACgB,wBAAdwD,EACRxD,MAAM,qFACgB,2BAAdwD,GACRxD,MAAM,6DACNyD,OAAOC,SAASC,UAEhB9C,QAAQC,IAAIH,QA2EN,mBAUA,cAAChB,EAAA,EAAD,CACED,KAAK,SACLoD,WAAS,EACTlD,QAAQ,WACRC,MAAM,UACN9B,UAAWmE,EAAQF,IACnBlC,QAnEG,WACjB7B,EAAQmB,KAAK,YA4DD,qBAUA,eAACwE,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACE,cAACC,EAAA,EAAD,CAAMC,KAAK,IAAIrE,QAAQ,QAAvB,gCAIF,cAACgE,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACE,EAAA,EAAD,CAAMC,KAAK,IAAIrE,QAAQ,QAAvB,SACG,6CAMX,cAACsE,EAAA,EAAD,CAAKC,GAAI,YAhFV,8B,yCClEIC,EAzDEC,IAAMC,MAAK,YAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAA8B,EAAvBvF,IAAuB,EAAlBwF,aAwCrD,OAAO,sBAAK3G,UAAU,0BAAf,UACL,qBAAKA,UAAU,uBAAf,SACE,cAAC,IAAD,CAAU8B,MAAM,UAAU8E,SAAS,YAErC,sBAAK5G,UAAU,UAAU6G,MAAO,CAAClD,gBAAgB,UAAWmD,aAAa,GAAIC,WAAW,IAAxF,UACE,8BACE,sBAAM/G,UAAU,OAAhB,SA7CM,WACV,IAAMkB,EAAOuF,EAAMD,EAAKrF,KACxB,OAAID,EACKA,EAAKT,SAEL,YAwCoBuG,OAE3B,qBAAKhH,UAAU,MAAf,SACGwG,EAAKS,eATyCP,MAapD,SAACQ,EAAWC,GACb,OAAQD,EAAUV,OAASW,EAAUX,MAAUU,EAAUT,QAAUU,EAAUV,SCnDzEW,EAAQd,IAAMC,MAAK,YAAwC,IAAtCc,EAAqC,EAArCA,MAAOZ,EAA8B,EAA9BA,MAAOtF,EAAuB,EAAvBA,IAAKwF,EAAkB,EAAlBA,aAC5C,OAAO,mCAELU,EAAMC,KAAI,SAACd,GACT,OAAO,8BACL,cAAC,EAAD,CAAUA,KAAMA,EAAMC,MAAOA,EAAOtF,IAAKA,EAAKuF,MAAOF,EAAKxB,GAAI2B,aAAcA,KAD7DH,EAAKxB,YAKzB,SAACkC,EAAWC,GACb,OAAQD,EAAUG,QAAUF,EAAUE,OACrCH,EAAUT,QAAUU,EAAUV,SAyMlBc,EAtME,SAACC,GAChB,IAAMtH,EAAUC,cADU,EAEAC,mBAAS,IAFT,mBAEnBiH,EAFmB,KAEZI,EAFY,OAGJrH,mBAAS,IAHL,mBAGnBe,EAHmB,KAGdN,EAHc,OAIYT,mBAAS,IAJrB,mBAInBsH,EAJmB,KAINC,EAJM,OAMAvH,mBAAS,IANT,mBAMnBqG,EANmB,KAMZmB,EANY,KAOlBC,EAAcC,cAAdD,UACFE,EAAiBC,iBAAO,MARJ,EASoB5H,mBAAS,MAT7B,mBASnB6H,EATmB,KASFC,EATE,OAUF9H,mBAAS,IAVP,mBAUnB+H,EAVmB,aAWE/H,mBAAS,KAXX,mBAWnBgI,EAXmB,UAiBLC,mBAAQ,WAG3B,OAAO,gCAAMF,EAAN,MAAeC,OACrB,CAACA,IAOJrH,qBAAU,WACR7B,EAAY8B,OAAOC,oBAAmB,SAACC,GACrC,IAAMC,GAAOjC,EAAY8B,OAAOI,aAAe,IAAID,IAChDA,EACDN,EAAOM,GAEPuE,OAAOC,SAAW,cAGrB,IAMH5E,qBAAU,YAJa,WAAO,IAAD,EAC3B,UAAAgH,EAAeO,eAAf,SAAwBC,eAAe,CAAEC,SAAU,WAInDC,KACC,CAACpB,IAmBJtG,qBAAU,WACQnB,EAAGwC,WAAW,QAAQsG,IAAI,QAAUb,GAAWzF,WAAW,YAClEuG,QAAQ,WAAWC,MAAMzG,MAAK,SAAC0G,GACrC,IAAMC,EAAOD,EAASE,KAAKzB,KAAI,SAACoB,GAAD,oBAC7B1D,GAAI0D,EAAI1D,IACL0D,EAAII,WAETrB,EAASqB,QAEV,IAEH/H,qBAAU,WACQnB,EAAGwC,WAAW,QAAQsG,IAAI,QAAUb,GAAWzF,WAAW,YAClEuG,QAAQ,WAAWK,YAAW,SAACH,GACrCA,EAASI,aAAaC,SAAQ,SAACC,GAC7B,GAAoB,UAAhBA,EAAOxH,KAAkB,CAC3B,IAAMyH,EAAWD,EAAOT,IAAII,OAC5BM,EAASpE,GAAKmE,EAAOT,IAAI1D,GACzBkD,EAAmBkB,QAEhB,GAAoB,aAAhBD,EAAOxH,KAAqB,CACnC,IAAMmH,EAAOK,EAAOT,IAAII,OACxBA,EAAK9D,GAAKmE,EAAOT,IAAI1D,GACrBkD,EAAmBY,OAGI,YAAhBK,EAAOxH,MACdmB,QAAQC,IAAI,mBAAoBoG,EAAOT,IAAII,gBAIhD,IAEH,IAAMO,EAAchB,mBAAQ,WAI1B,IAAIJ,EACF,OAAOZ,EAGT,IAAMiC,EAAM,YAAOjC,GACbX,EAAQ4C,EAAOC,WAAU,SAAA/C,GAAI,OAAIA,EAAKxB,KAAOiD,EAAgBjD,MAUnE,OATc,IAAX0B,EACD4C,EAAOjI,KAAK4G,IAEZA,EAAgBjD,GAAKsE,EAAO5C,GAAO1B,GACnCsE,EAAO5C,GAASuB,GAGlBR,EAAS6B,GAEFA,IACN,CAACrB,IAEJlH,qBAAU,WACR,GAAoB,IAAjBsG,EAAMrF,OAAT,CAQA,IAAMwH,EAAOnC,EAAMC,KAAI,SAACd,GACtB,OAAOA,EAAKrF,OACXsI,QANH,SAAoBhI,EAAOiF,EAAOgD,GAChC,OAAOA,EAAKC,QAAQlI,KAAWiF,KAO7BkD,EAAWhK,EAAGwC,WAAW,QACzByH,EAAM,GACVD,EAASE,MAAM,MAAO,KAAON,GAAMZ,MAAMzG,MAAK,SAAC4H,GAC7CA,EAAcb,SAAQ,SAACR,GACrB,IAAMI,EAAOJ,EAAII,OACjBe,EAAIf,EAAK3H,KAAO2H,KAElBlB,EAASiC,SAEV,CAACxC,IAgBJ,OAAO,sBAAKR,MAAO,CAACmD,SAAS,YAAahK,UAAU,QAA7C,+BAUL,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,6CAA6C+B,QAAS,SAAAR,GArBzErC,EAAY8B,OAAOuD,UAAUpC,MAAK,WAChCjC,EAAQmB,KAAK,cAoBX,UACE,cAAC,IAAD,IACA,sBAAMrB,UAAU,qBAAhB,uBAEF,sBAAKA,UAAU,kDAAkD+B,QAAS,SAAAR,GAnB9ErB,EAAQmB,KAAK,gBAmBT,UACE,cAAC,IAAD,IACA,sBAAMrB,UAAU,qBAAhB,wBAGJ,sBAAKA,UAAU,kBAAf,UACE,sBAAK6G,MAAO,CAACoD,OAAQ,oBAAqBC,UAAU,SAAUC,cAAc,IAA5E,UACA,cAAC/C,EAAD,CAAOC,MAAOgC,EAAa5C,MAAOA,EAAOtF,IAAKA,IAC9C,qBAAK0F,MAAO,CAAEuD,MAAM,OAAQC,MAAO,QACjC3H,IAAKqF,OAGP,qBAAK/H,UAAU,QAAQ6G,MAAO,CAACyD,OAAO,GAAItG,MAAM,oBAAqBL,gBAAgB,WAArF,SACE,sBAAK3D,UAAU,WAAf,UACE,0BAAUA,UAAU,yBACpB0B,YAAY,iCACZD,MAAOiG,EAAapG,SAAU,SAAAC,IA9Cf,SAACA,GACxBoG,EAAepG,EAAIC,OAAOC,OA6CoB8I,CAAiBhJ,MACvD,qBAAKvB,UAAU,uBAAuB+B,QAAS,SAAAR,GA9IvD3B,EACGwC,WAAW,QACXsG,IAAI,QAAUb,GACdzF,WAAW,YACXC,IAAI,CACHlB,IAAKA,EAEL8F,QAASS,EACTpF,QAASnD,IAASU,UAAU0C,UAAUC,MAAMC,UAE7CN,MAAK,SAACO,GACLiF,EAAe,QAmIX,iC,oDC3MN3E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsH,QAAS,CACPxG,MAAO,OACPL,gBAAiBT,EAAMU,QAAQ6G,WAAWtH,MAC1CG,QAAS,QACToH,UAAU,IACVC,SAAU,QAEZC,MAAO,CACL5G,MAAO,QACPiG,OAAQ,OACRY,YAAa3H,EAAMG,QAAQ,IAE7BY,IAAK,CACHgG,OAAQ,QAEV9G,MAAO,CACLa,MAAO,IACP8G,QAAS5H,EAAMG,QAAQ,IAEzB0H,SAAU,CACR/G,MAAO,IACP8G,QAAS5H,EAAMG,QAAQ,QAoHZ2H,EAhHQ,SAACxD,GAAW,IAAD,IAC1BrD,EAAUnB,IACV9C,EAAUC,cAFgB,EAGFC,mBAAS,IAHP,mBAGzB6K,EAHyB,KAGhBC,EAHgB,OAIA9K,mBAAS,IAJT,mBAIzB+K,EAJyB,KAIfC,EAJe,KAmDhC,OAZArK,qBAAU,WACR,IAAIsK,EAAY,GAChBzL,EAAGwC,WAAW,QACbwG,MACAzG,MAAK,SAAC4H,GACLA,EAAcb,SAAQ,SAACR,GACrB2C,EAAYA,EAAUC,OAAO,CAACtG,GAAG0D,EAAI1D,GAAIE,KAAKwD,EAAII,OAAO5D,UAE3DkG,EAAYC,QAEb,IAGD,gCACE,cAACxF,EAAA,EAAD,CAAMC,WAAS,EAACyF,UAAU,SAAS/H,WAAW,WAAWH,QAAS,GAAlE,SACE,cAACwC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIwF,GAAI,GAAIC,GAAI,GAA/B,SACE,sBACEzL,UAAU,8BACV+B,QAAS,SAACR,GAtBlBrC,EAAY8B,OAAOuD,UACnBrE,EAAQmB,KAAK,WAmBP,UAME,cAAC,IAAD,IACA,iDAIN,eAACwE,EAAA,EAAD,CAAMC,WAAS,EAACyF,UAAU,SAAS/H,WAAW,SAA9C,UACE,cAACqC,EAAA,GAAD,GAAME,MAAI,GAAV,4CAAoB,IAApB,mBAA4B,IAA5B,mBAAoC,IAApC,yBACE,eAAC2F,EAAA,EAAD,CAAO1L,UAAWmE,EAAQ4G,SAAUY,UAAW,EAA/C,UACA,cAACC,EAAA,EAAD,CAAY/J,QAAQ,KAApB,8BACA,cAACgD,EAAA,EAAD,CACE7E,UAAWmE,EAAQyG,MACnB/I,QAAQ,WACRH,YAAY,qFACZD,MAAOwJ,EACP3J,SAAU,SAACC,IArEI,SAACA,GACxB2J,EAAW3J,EAAIC,OAAOC,OAqEZ8I,CAAiBhJ,MAGrB,cAACK,EAAA,EAAD,CACE5B,UAAWmE,EAAQF,IACnBtC,KAAK,SACLE,QAAQ,YACRE,QAAS,SAACR,GAAD,OAzEM,WACvB,GAAGsK,OAAOC,OAAOX,GAAUxB,QAAQsB,IAAY,EAG7C,OAFAhJ,MAAM,oFACNiJ,EAAW,IAIbtL,EACCwC,WAAW,QACXsG,IAAI,QAAUuC,GACdc,IAAI,CAAC7G,KAAM+F,IACX9I,MAAK,WACJF,MAAMgJ,EAAU,mEAChB/K,EAAQmB,KAAR,gBAAsB4J,OAEvBtI,OAAM,WACLV,MAAM,kFAyDkB+J,IAJpB,gCAZF,IAuBA,cAACJ,EAAA,EAAD,CAAY/J,QAAQ,KAApB,kBAEA,cAACgE,EAAA,GAAD,GAAME,MAAI,GAAV,4CAAoB,IAApB,mBAA4B,IAA5B,mBAAoC,IAApC,yBACE,eAAC2F,EAAA,EAAD,CAAO1L,UAAWmE,EAAQhB,MAAOwI,UAAW,EAA5C,UACE,cAACC,EAAA,EAAD,CAAY/J,QAAQ,KAApB,4BACA,qBAAK7B,UAAWmE,EAAQqG,QAAxB,SACE,eAACyB,EAAA,EAAD,WACId,GACAA,EAAS7D,KAAI,SAAC4E,GACZ,OAAO,eAACC,EAAA,EAAD,CAAwBC,QAAM,EAACrK,QAAS,SAACR,GAAD,OArE/C8K,EAqEiEH,EAAKhH,UApEtFhF,EAAQmB,KAAR,gBAAsBgL,IADP,IAACA,GAqEO,cAAuE,cAACC,EAAA,EAAD,CAAcC,QAASL,EAAKhH,SAApFgH,EAAKlH,OAGjB,MAAZmG,GAAuC,GAAnBA,EAASnJ,QAAiB,cAAC4J,EAAA,EAAD,0GAVxD,WCpGOY,EAtBF,WAAO,IAAD,EACKpM,mBAAS,GADd,mBACVqM,EADU,KACLC,EADK,KAWjB,OAJA3L,qBAAU,WACR+B,QAAQC,IAAI,oBACX,GAEI,4CAEL,uBACC0J,EAED,qBAAK1K,QAbS,WACd2K,GAAO,SAAAC,GAAI,OAAIA,EAAO,MAYtB,oB,QCZEvF,EAAQd,IAAMC,MAAK,YAAwC,IAAtCc,EAAqC,EAArCA,MAAOZ,EAA8B,EAA9BA,MAAOtF,EAAuB,EAAvBA,IAAKwF,EAAkB,EAAlBA,aAC5C,OAAO,mCAELU,EAAMC,KAAI,SAACd,GACT,OAAO,8BACL,cAAC,EAAD,CAAUA,KAAMA,EAAMC,MAAOA,EAAOtF,IAAKA,EAAKuF,MAAOF,EAAKxB,GAAI2B,aAAcA,KAD7DH,EAAKxB,YAKzB,SAACkC,EAAWC,GACb,OAAQD,EAAUG,QAAUF,EAAUE,OACrCH,EAAUT,QAAUU,EAAUV,SAuKlBmG,EApKW,SAACpF,GACzB,IAAMtH,EAAUC,cADmB,EAET0M,YAAS,IAFA,mBAE5BxF,EAF4B,KAErBI,EAFqB,OAGbrH,mBAAS,IAHI,mBAG5Be,EAH4B,KAGvBN,EAHuB,OAIGT,mBAAS,IAJZ,mBAI5BsH,EAJ4B,KAIfC,EAJe,OAKTvH,mBAAS,IALA,mBAK5BqG,EAL4B,KAKrBmB,EALqB,KAM3BC,EAAcC,cAAdD,UACFE,EAAiBC,iBAAO,MAE9BjH,qBAAU,WACR7B,EAAY8B,OAAOC,oBAAmB,SAACC,GACrC,IAAMC,GAAOjC,EAAY8B,OAAOI,aAAe,IAAID,IAChDA,EACDN,EAAOM,GAEPuE,OAAOC,SAAW,cAGrB,IAMH5E,qBAAU,YAJa,WAAO,IAAD,EAC3B,UAAAgH,EAAeO,eAAf,SAAwBC,eAAe,CAAEC,SAAU,WAInDC,KACC,CAACpB,IAiBJtG,qBAAU,WACQnB,EAAGwC,WAAW,QAAQsG,IAAI,QAAUb,GAAWzF,WAAW,YAClEuG,QAAQ,WAAWK,YAAW,SAACH,GACrCA,EAASI,aAAaC,SAAQ,SAACC,GAC7B,GAAoB,UAAhBA,EAAOxH,KAAkB,CAC3B,IAAMyH,EAAWD,EAAOT,IAAII,OAC5BM,EAASpE,GAAKmE,EAAOT,IAAI1D,GACzByC,GAAS,SAAAqF,GACPA,EAAMzL,KAAK+H,MAGf,GAAoB,aAAhBD,EAAOxH,KAAqB,CAC9B,IAAMmH,EAAOK,EAAOT,IAAII,OACxBA,EAAK9D,GAAKmE,EAAOT,IAAI1D,GACrByC,GAAS,SAAAqF,GACP,IAAMpG,EAAQoG,EAAMvD,WAAU,SAAAwD,GAAE,OAAIA,EAAG/H,KAAOmE,EAAOT,IAAI1D,MACzD8H,EAAMpG,GAASoC,KAGC,YAAhBK,EAAOxH,MACTmB,QAAQC,IAAI,mBAAoBoG,EAAOT,IAAII,gBAIhD,IAEH/H,qBAAU,WACR,GAAoB,IAAjBsG,EAAMrF,OAAT,CAQA,IAAMwH,EAAOnC,EAAMC,KAAI,SAACd,GACtB,OAAOA,EAAKrF,OACXsI,QANH,SAAoBhI,EAAOiF,EAAOgD,GAChC,OAAOA,EAAKC,QAAQlI,KAAWiF,KAO7BkD,EAAWhK,EAAGwC,WAAW,QACzByH,EAAM,GACVD,EAASE,MAAM,MAAO,KAAON,GAAMZ,MAAMzG,MAAK,SAAC4H,GAC7CA,EAAcb,SAAQ,SAACR,GACrB,IAAMI,EAAOJ,EAAII,OACjBe,EAAIf,EAAK3H,KAAO2H,KAElBlB,EAASiC,SAEV,CAACxC,IAuCJ,OAAO,qBAAKR,MAAO,CAACmD,SAAS,YAAahK,UAAU,QAA7C,SACL,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,0CAA0C+B,QAAS,SAAAR,GAnCtErC,EAAY8B,OAAOuD,UAAUpC,MAAK,WAChCjC,EAAQmB,KAAK,cAkCX,UACE,cAAC,IAAD,IACA,sBAAMrB,UAAU,kBAAhB,uBAEF,sBAAKA,UAAU,+CAA+C+B,QAAS,SAAAR,GAjC3ErB,EAAQmB,KAAK,gBAiCT,UACE,cAAC,IAAD,IACA,sBAAMrB,UAAU,kBAAhB,sCAGJ,sBAAKA,UAAU,kBAAf,UACE,sBAAK6G,MAAO,CAACoD,OAAQ,oBAAqBC,UAAU,SAAUC,cAAc,IAA5E,UACA,cAAC,EAAD,CAAO9C,MAAOA,EAAOZ,MAAOA,EAAOtF,IAAKA,EAAKwF,aArC9B,SAACqG,EAAUC,GAC9B,IAAMC,EAAUtN,EAAGwC,WAAW,QAAQsG,IAAI,QAAUb,GAAWzF,WAAW,YAAYsG,IAAIuE,GAC1FC,EAAQtE,MAAMzG,MAAK,SAAAuG,GACjB,IAAMI,EAAOJ,EAAII,OACXqE,EAAQ,eAAOrE,EAAKsE,OACtB5D,EAAO2D,EAASH,GAEhBxD,EACCA,EAAK6D,SAASlM,IAEfqI,EAAKnI,KAAKF,GAGZqI,EAAO,CAACrI,GAGVgM,EAASH,GAAYxD,EACrB0D,EAAQI,OAAO,CACbF,MAAOD,UAoBP,qBAAKtG,MAAO,CAAEuD,MAAM,OAAQC,MAAO,QACjC3H,IAAKqF,OAGP,sBAAK/H,UAAU,QAAQ6G,MAAO,CAACyD,OAAO,GAAItG,MAAM,oBAAqBL,gBAAgB,WAArF,UACE,qBAAK3D,UAAU,WAAf,SACE,0BAAUA,UAAU,yBACpB0B,YAAY,iCACZD,MAAOiG,EAAapG,SAAU,SAAAC,IA5Df,SAACA,GACxBoG,EAAepG,EAAIC,OAAOC,OA2DoB8I,CAAiBhJ,QAEzD,qBAAKvB,UAAU,eAAf,SACE,qBAAKA,UAAU,0BAA0B+B,QAAS,SAAAR,GA/H1D3B,EACGwC,WAAW,QACXsG,IAAI,QAAUb,GACdzF,WAAW,YACXC,IAAI,CACHlB,IAAKA,EACL8F,QAASS,EACTpF,QAASnD,IAASU,UAAU0C,UAAUC,MAAMC,UAE7CN,MAAK,SAACO,GACLiF,EAAe,QAqHX,SAAwE,cAAC,IAAD,oBCnJrE4F,E,4JAhBb,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIhJ,UAAWP,IACjC,cAAC,IAAD,CAAOsJ,OAAK,EAACC,KAAK,UAAUhJ,UAAWxE,IACvC,cAAC,IAAD,CAAOuN,OAAK,EAACC,KAAK,cAAchJ,UAAWuG,IAC3C,cAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,SAAShJ,UAAWP,IACtC,cAAC,IAAD,CAAOsJ,OAAK,EAACC,KAAK,mBAAmBhJ,UAAW8C,IAChD,cAAC,IAAD,CAAOiG,OAAK,EAACC,KAAK,yBAAyBhJ,UAAWmI,IACtD,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,QAAQhJ,UAAW+H,a,GAX1BlG,IAAMoH,WCDZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1L,MAAK,YAAkD,IAA/C2L,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,K","file":"static/js/main.255e387e.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId\n});\n\nconst db = firebaseApp.firestore();\nexport { db, firebaseApp, firebase};\n","import React from 'react';\n\nconst Spinner = ({show}) => {\n  return <div className={`posFx vw100 vh100 aic jcc ${show ? \"flex\":\"dNone\"}`}>\n    <div className=\"spinner loader\">\n    </div>\n  </div>\n}\n\nexport default Spinner\n\n","import React, {useState, useEffect} from 'react';\nimport '../App.css';\nimport {useHistory} from 'react-router-dom';\nimport {db, firebaseApp, firebase} from '../firebase';\nimport Spinner from '../components/Spinner';\nimport Button from \"@material-ui/core/Button\";\n\nconst Signup = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nickName, setNickName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [uid, setUid] = useState(\"\");\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  const signup = () => {\n    if(email.length < 3) {\n      alert('올바른 이메일을 입력해주세요.');\n      return;\n    }\n\n    //TODO: validation check\n\n    setLoading(true);\n    firebaseApp.auth().createUserWithEmailAndPassword(email, password)\n    .then((user) => {\n      const uid = (firebaseApp.auth().currentUser || {}).uid;\n      if(uid){\n        db\n        .collection('user')\n        .add({\n          uid: uid,\n          nickName: nickName,\n          email: email,\n          created: firebase.firestore.Timestamp.now().seconds\n        })\n        .then((ref) => {\n          setLoginStatus(true);\n          setUid(uid);\n      \n          setEmail(\"\");\n          setPassword(\"\");\n\n          alert(nickName + '님 환영합니다.');\n          history.push('/createChat');\n\n          setLoading(false);\n        })\n      }else{\n        alert('error');\n      }\n    })\n    .catch((error) => {\n      setLoading(false);\n      let errorCode = error.code;\n      if(errorCode === \"auth/email-already-in-use\"){\n        alert('이미 존재하는 사용자입니다. 로그인 해주세요.');\n        history.push('/login');\n      }else{\n        console.log(error);\n      }\n    });\n  }\n\n  useEffect(() => {\n    firebaseApp.auth().onAuthStateChanged((user) => {\n      const uid = (firebaseApp.auth().currentUser || {}).uid;\n      if(uid){\n        setLoginStatus(true);\n        setUid(uid);\n        history.push('/app');\n      }\n    })\n  }, [])\n\n  return (\n    <div>     \n      <Spinner show={loading}/> \n      <div className=\"flex aic jcc vh100\">\n        <div className=\"w400\">\n          <div className=\"fdr aic pt16\">\n            <div className=\"w100\">\n              <span>NickName</span>\n            </div>\n            <input onChange={evt => {setNickName(evt.target.value)}}\n              className=\"default_input f1\"\n              placeholder=\"nickname\"\n              value={nickName}\n            />\n          </div>\n\n          <div className=\"fdr aic pt16\">\n            <div className=\"w100\">\n              <span>email</span>\n            </div>\n            <input onChange={evt => {setEmail(evt.target.value)}}\n              className=\"default_input f1\"\n              placeholder=\"email\"\n              value={email}\n            />\n          </div>\n          <div className=\"fdr aic pt16\">\n            <div className=\"w100\">\n              <span>password</span>\n            </div>\n            <input onChange={evt => {setPassword(evt.target.value)}}\n              className=\"default_input f1\"\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n            />\n          </div>\n          <div className=\"jcc flex pt16 pb16\">\n          </div>\n          <Button type=\"button\" variant=\"outlined\" color=\"primary\" onClick={signup}> Sign Up </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { firebaseApp } from \"../firebase\";\nimport Spinner from \"../components/Spinner\";\nimport {Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Grid, Box, Container} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  btn: {\n    margin: theme.spacing(0, 0, 2),\n    color: '#ffffff'\n  }\n  // loginBtn: {\n  //   margin: theme.spacing(0, 0, 2),\n  //   background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  //   borderRadius: 3,\n  //   border: 0,\n  //   color: 'white',\n  //   height: 48,\n  //   padding: '0 30px',\n  //   boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  // },\n  // signUpBtn: {\n  //   margin: theme.spacing(0, 0, 2),\n  //   background: '#ffffff',\n  //   borderRadius: 3,\n  //   borderColor:'rgba(255, 105, 135, .3)',\n  //   border: '2px solid rgba(255, 105, 135, .3)',\n  //   color: 'white',\n  //   height: 48,\n  //   padding: '0 30px',\n  // },\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [initLoaded, setInitLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  const login = () => {\n    if (email.length < 3) {\n      alert(\"Please check your email\");\n      return;\n    }\n    //you might want to apply regex here.\n\n    setLoading(true);\n\n    firebaseApp\n      .auth().signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        const uid = (firebaseApp.auth().currentUser || {}).uid;\n        if (uid) {\n          setLoginStatus(true);\n          setEmail(\"\");\n          setPassword(\"\");\n          history.push(\"/createChat\");\n          setLoading(false);\n        } else {\n          alert(\"error\");\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        setLoading(false);\n        \n        let errorCode = error.code;\n        if (errorCode === \"auth/user-not-found\") {\n          alert(\"가입하세요.\");\n        }else if(errorCode === \"auth/invalid-email\"){\n          alert(\"이메일 형식이 아닙니다.\");\n        }else if (errorCode === \"auth/wrong-password\") {\n          alert(\"비밀번호가 올바르지 않습니다.\");\n        }else if (errorCode === \"auth/too-many-requests\") {\n          alert(\"다시 로그인 해주세요.\");\n          window.location.reload();\n        }else{\n          console.log(error);\n        }\n      });\n  };\n\n  const logout = () => {\n    firebaseApp.auth().signOut();\n    setLoginStatus(false);\n  };\n\n  useEffect(() => {\n    firebaseApp.auth().onAuthStateChanged((user) => {\n      setInitLoaded(true);\n      \n      const uid = (firebaseApp.auth().currentUser || {}).uid;\n      if (uid) {\n        setLoginStatus(true);\n        history.push(\"/createChat\");\n      } else {\n        //TODO: else 작성\n      }\n    });\n  }, []);\n\n  const goToSignup = () => {\n    history.push(\"/signup\");\n  };\n\n  if (!initLoaded) {\n    return <></>;\n  }\n\n  return (\n    <div>\n      <Spinner show={loading} />\n      {loginStatus ? (\n        <>\n          <div className=\"btn btn-danger\" onClick={(evt) => {logout();}}> logout </div>\n        </>\n      ) : (\n        <>\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n              <form className={classes.form} noValidate>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  autoFocus\n                  value={email}\n                  onChange={evt => {setEmail(evt.target.value)}}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  value={password}\n                  onChange={evt => {setPassword(evt.target.value)}}\n                />\n                <FormControlLabel\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\n                  label=\"Remember me\"\n                />\n                <Button\n                  type=\"button\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.btn}\n                  onClick={evt => {login()}}\n                >\n                  Login\n                </Button>\n                <Button\n                  type=\"button\"\n                  fullWidth\n                  variant=\"outlined\" \n                  color=\"primary\"\n                  className={classes.btn}\n                  onClick={goToSignup}\n                >\n                  Sign Up\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <Link href=\"#\" variant=\"body2\">\n                      Forgot password?\n                    </Link>\n                  </Grid>\n                  <Grid item>\n                    <Link href=\"#\" variant=\"body2\">\n                      {\"Don't have an account? Sign Up\"}\n                    </Link>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n            <Box mt={8}>\n            </Box>\n          </Container>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport FaceIcon from '@material-ui/icons/Face';\n\nconst ChatCard = React.memo(({chat, users, index, uid, onEmojiClick}) => {\n  const who = () => {\n    const user = users[chat.uid]\n    if (user){\n      return user.nickName\n    }else{\n      return \"anonymous\"\n    }\n  } \n\n  // const renderEmojiSection = () => {\n  //   const emojiObj = chat.emoji\n  //   return <>\n  //     <div className=\"fdr\">\n  //       <EmojiButton emojiKey={'1'} emojiValue={\"😎\"} emojiObj={emojiObj}/>\n  //       <EmojiButton emojiKey={'2'} emojiValue={\"🤣\"} emojiObj={emojiObj}/>\n  //     </div>  \n  //   </>\n  // }\n\n  // const EmojiButton = ({emojiKey, emojiValue, emojiObj}) => {\n  //   let extraClassName = \"\"\n  //   if(emojiObj && emojiObj[emojiKey]){\n  //     if(emojiObj[emojiKey].includes(uid)){\n  //       extraClassName = \"active\"\n  //     }\n  //   }\n\n  //   return <div>\n  //     <div onClick={e=> onEmojiClick(emojiKey, chat.id)} className={`emojiRec flex fdr aic ${extraClassName}`}>\n  //       <span>{emojiValue}</span>\n  //       <span>\n  //         {emojiObj && emojiObj[emojiKey] &&\n  //           <div>{emojiObj[emojiKey].length}</div>\n  //         }\n  //       </span>\n  //     </div>\n  //   </div>\n  // }\n\n  return <div className=\"flex fdr pb16 chat_card\" key={index}>\n    <div className=\"w40 h40 flex aic jcc\">\n      <FaceIcon color='primary' fontSize='large'/>\n    </div>\n    <div className=\"pl16 f1\" style={{backgroundColor:'#dee5f4', borderRadius:20, marginLeft:10}}>\n      <div>\n        <span className=\"bold\" >{who()}</span>\n      </div>\n      <div className=\"pt8\">\n        {chat.content}\n      </div>\n    </div>    \n  </div>\n}, (prevProps, nextProps) => {\n  return (prevProps.chat === nextProps.chat) && (prevProps.users === nextProps.users)\n});\n\nexport default ChatCard","import React, {useEffect, useState, useRef, useMemo} from 'react';\nimport {useParams, useHistory} from 'react-router-dom';\nimport {db, firebaseApp, firebase} from '../firebase';\nimport { BiSend, BiLogOut, BiCommentAdd} from \"react-icons/bi\";\nimport ChatCard from '../components/chats/ChatCard';\n\nconst Chats = React.memo(({chats, users, uid, onEmojiClick}) => {\n  return <>\n    {\n    chats.map((chat) => {\n      return <div key={chat.id}>\n        <ChatCard chat={chat} users={users} uid={uid} index={chat.id} onEmojiClick={onEmojiClick}/>\n      </div>\n    })\n  }</>\n}, (prevProps, nextProps) => {\n  return (prevProps.chats === nextProps.chats) && \n  (prevProps.users === nextProps.users)\n})\n\nconst ChatRoom = (props) => {\n  const history = useHistory();\n  const [chats, setChats] = useState([]);\n  const [uid, setUid] = useState(\"\");\n  const [chatContent, setChatContent] = useState(\"\");\n\n  const [users, setUsers] = useState({});\n  const { channelId } = useParams();\n  const messagesEndRef = useRef(null)\n  const [modifyCandidate, setModifyCandidate] = useState(null);\n  const [text, setText] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n\n  const onClick = () => {\n    setSearch(text);\n  }\n\n  const memoizedText = useMemo(() => {\n    // TODO: study memo\n    // console.log('use memo');\n    return <div>{text} - {search}</div>;\n  }, [search])\n\n  // useEffect(() => {\n  //   let userInfo = firebase.auth().currentUser;\n  //   console.log('userInfo', userInfo);\n  // }, []);\n\n  useEffect(() => {\n    firebaseApp.auth().onAuthStateChanged((user) => {\n      const uid = (firebaseApp.auth().currentUser || {}).uid;\n      if(uid){\n        setUid(uid);\n      }else{\n        window.location = \"/login\";\n      }\n    })\n  }, [])\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [chats]);\n\n  const addDocument = () => {\n    db\n      .collection('chat')\n      .doc('room_' + channelId)\n      .collection('messages')\n      .add({\n        uid: uid,\n        // nickName: user.nickName,\n        content: chatContent,\n        created: firebase.firestore.Timestamp.now().seconds\n      })\n      .then((ref) => {\n        setChatContent('');\n      })\n      //TODO: add catch\n  }\n\n  useEffect(() => {\n    const chatRef = db.collection('chat').doc('room_' + channelId).collection('messages');\n    chatRef.orderBy(\"created\").get().then((snapshot) => {\n      const data = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setChats(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    const chatRef = db.collection('chat').doc('room_' + channelId).collection('messages');\n    chatRef.orderBy(\"created\").onSnapshot((snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === \"added\") {\n          const newEntry = change.doc.data();\n          newEntry.id = change.doc.id;\n          setModifyCandidate(newEntry); \n        }\n        else if (change.type === \"modified\") {\n          const data = change.doc.data();\n          data.id = change.doc.id;\n          setModifyCandidate(data);  \n          //TODO : modified\n        }\n        else if (change.type === \"removed\") {\n          console.log(\"remove message: \", change.doc.data());\n        }\n      });\n    });\n  }, [])\n\n  const chatRecords = useMemo(() => {\n    //TODO: study memo\n    //this part will only be refreshed when modifyCandidate is set.\n    // console.log('chat records use memo');\n    if(!modifyCandidate){\n      return chats;\n    }\n\n    const copied = [...chats];\n    const index = copied.findIndex(chat => chat.id === modifyCandidate.id);\n    if(index === -1) {\n      copied.push(modifyCandidate);\n    } else{\n      modifyCandidate.id = copied[index].id;\n      copied[index] = modifyCandidate;\n    }\n\n    setChats(copied);\n\n    return copied;\n  }, [modifyCandidate])\n\n  useEffect(() => {\n    if(chats.length === 0){\n      return ;\n    }\n\n    function onlyUnique(value, index, self) {\n      return self.indexOf(value) === index;\n    }\n\n    const uids = chats.map((chat) => {\n      return chat.uid;\n    }).filter(onlyUnique)\n\n    var usersRef = db.collection(\"user\");\n    var arr = {};\n    usersRef.where(\"uid\", 'in',  uids).get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        arr[data.uid] = data;\n      });\n      setUsers(arr);\n    });  \n  }, [chats])\n\n  const onTextareaChange = (evt) => {\n    setChatContent(evt.target.value);\n  }\n\n  const logout = () => {\n    firebaseApp.auth().signOut().then(() => {\n      history.push('/login');\n    })\n  }\n\n  const createChatRoom = () => {\n    history.push('/createChat');\n  }\n\n  return <div style={{position:'relative'}} className=\"vh100\">\n\n    //TODO: study memo\n    {/* \n      <input value={text} onChange={evt => {setText(evt.target.value)}}/>\n      <div onClick={onClick}>??????</div>\n      <hr/>\n      {memoizedText}  \n    */}\n\n    <div className=\"flex fdr vh100\">\n      <div className=\"w200 bg_primary p16\">\n        <div className=\"color_white flex fdr aic cursor_pointer h3\" onClick={evt => {logout()}}>\n          <BiLogOut/>\n          <span className=\"color_white pl8 h3\">Logout</span>\n        </div>\n        <div className=\"color_white flex fdr aic cursor_pointer pt16 h3\" onClick={evt => {createChatRoom()}}>\n          <BiCommentAdd/>\n          <span className=\"color_white pl8 h3\">Exit</span>\n        </div>\n      </div>\n      <div className=\"f1 pl16 pt16 pr\">\n        <div style={{height: 'calc(100% - 50px)', overflowY:'scroll', paddingBottom:50,}}>\n        <Chats chats={chatRecords} users={users} uid={uid}/>   \n        <div style={{ float:\"left\", clear: \"both\" }}\n          ref={messagesEndRef}>\n        </div>\n        </div>\n        <div className=\"posAb\" style={{bottom:16, width:'calc(100% - 32px)', backgroundColor:'#dcdcdc',}}>\n          <div className=\"flex fdr\">   \n            <textarea className=\"default_textarea f1 p8\"\n            placeholder=\"send a message to this channel\"\n            value={chatContent} onChange={evt => {onTextareaChange(evt)}}></textarea>\n            <div className=\"btn btn-send w100 h3\" onClick={evt => addDocument()}>send</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n}\n\nexport default ChatRoom","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { db, firebaseApp } from \"../firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BiLogOut } from \"react-icons/bi\";\nimport { Grid, Paper, Button, TextField, List, ListItem, ListItemText, Typography, Divider } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  listDiv: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    display: \"block\",\n    maxHeight:500, \n    overflow: 'auto',\n  },\n  input: {\n    width: \"450px\",\n    height: \"55px\",\n    marginRight: theme.spacing(2),\n  },\n  btn: {\n    height: \"55px\"\n  },\n  paper: {\n    width: 700,\n    padding: theme.spacing(2),\n  },\n  paperTop: {\n    width: 700,\n    padding: theme.spacing(2),\n  }\n}));\n\nconst ChatRoomCreate = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [channel, setChannel] = useState(\"\");\n  const [roomData, setRoomData] = useState([]);\n\n  const onTextareaChange = (evt) => {\n    setChannel(evt.target.value);\n  };\n\n  const creatNewChatRoom = () => {\n    if(Object.values(roomData).indexOf(channel) > -1){\n      alert('이미 존재하는 채널명입니다.');\n      setChannel('');\n      return;\n    }\n\n    db\n    .collection('chat')\n    .doc('room_' + channel)\n    .set({name: channel})\n    .then(() => {\n      alert(channel + ' 채널이 생성되었습니다.');\n      history.push(`/chat/${channel}`);\n    })\n    .catch(() => {\n      alert('채널 생성에 실패하였습니다.');\n    });\n  };\n\n  const joinChat = (roomName) => {\n    history.push(`/chat/${roomName}`);\n  }\n\n  const logout = () => {\n    firebaseApp.auth().signOut();\n    history.push(\"/login\");\n  };\n\n  useEffect(() => {\n    let addedList = [];\n    db.collection(\"chat\")\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        addedList = addedList.concat({id:doc.id, name:doc.data().name});\n      });\n      setRoomData(addedList);\n    })\n  }, []);\n\n  return (\n    <div>\n      <Grid container direction=\"column\" alignItems=\"flex-end\" spacing={10}>\n        <Grid item xs={12} sm={12} md={12}>\n          <div\n            className=\"flex fdr aic cursor_pointer\"\n            onClick={(evt) => {\n              logout();\n            }}\n          >\n            <BiLogOut />\n            <span>Logout</span>\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <Grid item item xs={12} sm={12} md={12}>\n          <Paper className={classes.paperTop} elevation={3}>\n          <Typography variant=\"h6\"> Create Channel </Typography>\n          <TextField\n            className={classes.input}\n            variant=\"outlined\"\n            placeholder=\"개설할 채널 이름을 입력하세요.\"\n            value={channel}\n            onChange={(evt) => {\n              onTextareaChange(evt);\n            }}\n          />\n          <Button\n            className={classes.btn}\n            type=\"button\"\n            variant=\"contained\"\n            onClick={(evt) => creatNewChatRoom()}\n          >\n            Create Channel\n          </Button>\n          </Paper>\n        </Grid>\n\n        <Typography variant=\"h6\"> or </Typography>\n\n        <Grid item item xs={12} sm={12} md={12}>\n          <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"h6\"> Join Channel </Typography>\n            <div className={classes.listDiv}>\n              <List>\n                { roomData && \n                  roomData.map((room) => {\n                    return <ListItem key={room.id} button onClick={(evt) => joinChat(room.name)}> <ListItemText primary={room.name} /></ListItem>\n                  })\n                }\n                { roomData == null || roomData.length == 0 && ( <Typography>현재 개설된 채팅방이 없습니다.</Typography>)}\n              </List>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ChatRoomCreate;\n","import React, {useEffect, useState} from 'react';\n\n\nconst Test = () => {\n  const [cnt, setCnt] = useState(0);\n\n  const onClick = () => {\n    setCnt(prev => prev + 1);\n  }\n\n  useEffect(() => {\n    console.log('use effect!!!!');\n  }, 0)\n\n  return <>gogo\n\n    <br/>\n    {cnt}\n\n    <div onClick={onClick}>++</div>\n  \n  </>\n\n}\n\nexport default Test","import React, {useEffect, useState, useRef, useMemo} from 'react';\nimport {useParams, useHistory} from 'react-router-dom';\nimport {db, firebaseApp, firebase} from '../firebase';\nimport { BiSend, BiLogOut, BiCommentAdd} from \"react-icons/bi\";\nimport ChatCard from '../components/chats/ChatCard';\nimport {useImmer} from 'use-immer';\n\nconst Chats = React.memo(({chats, users, uid, onEmojiClick}) => {\n  return <>\n    {\n    chats.map((chat) => {\n      return <div key={chat.id}>\n        <ChatCard chat={chat} users={users} uid={uid} index={chat.id} onEmojiClick={onEmojiClick}/>\n      </div>\n    })\n  }</>\n}, (prevProps, nextProps) => {\n  return (prevProps.chats === nextProps.chats) && \n  (prevProps.users === nextProps.users)\n})\n\nconst ChatRoomWithImmer = (props) => {\n  const history = useHistory();\n  const [chats, setChats] = useImmer([]);\n  const [uid, setUid] = useState(\"\");\n  const [chatContent, setChatContent] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const { channelId } = useParams();\n  const messagesEndRef = useRef(null)\n\n  useEffect(() => {\n    firebaseApp.auth().onAuthStateChanged((user) => {\n      const uid = (firebaseApp.auth().currentUser || {}).uid\n      if(uid){\n        setUid(uid);\n      }else{\n        window.location = \"/login\"\n      }\n    })\n  }, [])\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [chats]);\n\n  const addDocument = () => {\n    db\n      .collection('chat')\n      .doc('room_' + channelId)\n      .collection('messages')\n      .add({\n        uid: uid,\n        content: chatContent,\n        created: firebase.firestore.Timestamp.now().seconds\n      })\n      .then((ref) => {\n        setChatContent('');\n      })\n  }\n\n  useEffect(() => {\n    const chatRef = db.collection('chat').doc('room_' + channelId).collection('messages')\n    chatRef.orderBy(\"created\").onSnapshot((snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === \"added\") {\n          const newEntry = change.doc.data();\n          newEntry.id = change.doc.id\n          setChats(draft => {\n            draft.push(newEntry);\n          })\n        }\n        if (change.type === \"modified\") {\n          const data = change.doc.data();\n          data.id = change.doc.id\n          setChats(draft => {\n            const index = draft.findIndex(el => el.id === change.doc.id)\n            draft[index] = data\n          })          \n        }\n        if (change.type === \"removed\") {\n          console.log(\"remove message: \", change.doc.data());\n        }\n      });\n    });\n  }, [])\n\n  useEffect(() => {\n    if(chats.length === 0){\n      return ;\n    }\n\n    function onlyUnique(value, index, self) {\n      return self.indexOf(value) === index;\n    }\n\n    const uids = chats.map((chat) => {\n      return chat.uid\n    }).filter(onlyUnique)\n\n    var usersRef = db.collection(\"user\");\n    var arr = {};\n    usersRef.where(\"uid\", 'in',  uids).get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        arr[data.uid] = data;\n      })\n      setUsers(arr);\n    });  \n  }, [chats])\n\n  const onTextareaChange = (evt) => {\n    setChatContent(evt.target.value);\n  }\n\n  const logout = () => {\n    firebaseApp.auth().signOut().then(() => {\n      history.push('/login');\n    })\n  }\n\n  const createChatRoom = () => {\n    history.push('/createChat');\n  }\n\n  const onEmojiClick = (emojiKey, chatId) => {    \n    const chatRef = db.collection('chat').doc('room_' + channelId).collection('messages').doc(chatId)\n    chatRef.get().then(doc => {\n      const data = doc.data()      \n      const emojiObj = {...data.emoji};\n      let uids = emojiObj[emojiKey];\n\n      if (uids){\n        if(uids.includes(uid)){\n        }else{\n          uids.push(uid)\n        }\n      }else{\n        uids = [uid]\n      }\n\n      emojiObj[emojiKey] = uids\n      chatRef.update({\n        emoji: emojiObj\n      })  \n    })\n  }\n\n  return <div style={{position:'relative'}} className=\"vh100\">\n    <div className=\"flex fdr vh100\">\n      <div className=\"w200 bg_black p16\">\n        <div className=\"color_white flex fdr aic cursor_pointer\" onClick={evt => {logout()}}>\n          <BiLogOut/>\n          <span className=\"color_white pl8\">Logout</span>\n        </div>\n        <div className=\"color_white flex fdr aic cursor_pointer pt16\" onClick={evt => {createChatRoom()}}>\n          <BiCommentAdd/>\n          <span className=\"color_white pl8\">Create New Channel</span>\n        </div>\n      </div>\n      <div className=\"f1 pl16 pt16 pr\">\n        <div style={{height: 'calc(100% - 50px)', overflowY:'scroll', paddingBottom:50,}}>\n        <Chats chats={chats} users={users} uid={uid} onEmojiClick={onEmojiClick}/>   \n        <div style={{ float:\"left\", clear: \"both\" }}\n          ref={messagesEndRef}>\n        </div>\n        </div>\n        <div className=\"posAb\" style={{bottom:16, width:'calc(100% - 32px)', backgroundColor:'#dcdcdc',}}>\n          <div className=\"flex fdr\">   \n            <textarea className=\"default_textarea f1 p8\" \n            placeholder=\"send a message to this channel\"\n            value={chatContent} onChange={evt => {onTextareaChange(evt)}}></textarea>\n          </div>\n          <div className=\"flex jce fdr\">\n            <div className=\"btn btn-success h40 w40\" onClick={evt => addDocument()}><BiSend /></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n}\n\nexport default ChatRoomWithImmer","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport ChatRoom from './pages/ChatRoom';\nimport ChatRoomCreate from './pages/ChatRoomCreate';\nimport Test from './pages/Test';\nimport ChatRoomWithImmer from './pages/ChatRoomWithImmer';\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login}/>\n          <Route exact path=\"/signup\" component={Signup}/>\n          <Route exact path=\"/createChat\" component={ChatRoomCreate}/>\n          <Route exact path=\"/login\" component={Login}/>\n          <Route exact path=\"/chat/:channelId\" component={ChatRoom}/>\n          <Route exact path=\"/chat_immer/:channelId\" component={ChatRoomWithImmer}/>\n          <Route exact path=\"/test\" component={Test}/>\n        </Switch>\n      </Router>\n    )\n  }\n}\nexport default Routes;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}